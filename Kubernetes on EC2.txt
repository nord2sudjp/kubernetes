https://kubernetes.io/ja/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
https://kubernetes.io/ja/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/

yum update -y


systemctl disable firewalld
vi /etc/sysconfig/selinux
SELINUX=disabled


echo "net.ipv4.ip_foward=1" >> /etc/sysctl.conf
sysctl --system
cat /etc/sysctl.conf

# yum-config-manager --add-repo  https://download.docker.com/linux/centos/docker-ce.repo

yum install ca-certificates
amazon-linux-extras install docker

systemctl enable docker && systemctl start docker

docker info

free
swapoff -a
free



cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ]
}
EOF

systemctl daemon-reload
systemctl restart docker
docker info | grep -i driver


cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
systemctl enable --now kubelet
systemctl daemon-reload
systemctl restart kubelet


[Ç±ÇÍà»ç~ÇÕMasterÇÃÇ›]

kubeadm init --pod-network-cidr=10.244.0.0/16
#kubeadm init --pod-network-cidr=192.168.0.0/16

mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.12.0/Documentation/kube-flannel.yml

#kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml

kubectl taint nodes --all node-role.kubernetes.io/master-

kubectl get all --all-namespaces


kubectl run hello-world --image=hello-world --restart=Never --rm
kubectl logs hello-world


[root@ip-172-31-34-51 ~]# kubeadm token list
TOKEN                     TTL         EXPIRES                USAGES                   DESCRIPTION                                                EXTRA GROUPS
5qrk1b.5hndyva8stxja0q7   2h          2021-04-14T10:37:24Z   authentication,signing   The default bootstrap token generated by 'kubeadm init'.   system:bootstrappers:kubeadm:default-node-token

[Ç±ÇÍà»ç~ÇÕWorkerÇÃÇ›]
kubeadm join 172.31.34.51:6443 --token ouo5xr.dy9o6rhdvz3f1m14 \
        --discovery-token-ca-cert-hash sha256:7c10f3b892bb9bb8f5c3e84c44966754f41b6ccda36eced1e5271cfe93307a8a

#kubeadm join 172.31.34.51:6443 --token 5qrk1b.5hndyva8stxja0q7 \
#        --discovery-token-ca-cert-hash sha256:95e61f1888f2aa9a11442f0268c56f43516f091da15637ea266d9bb5b4244d6e


[taintÇÃçƒê›íË]
kubectl get nodes
NAME                                               STATUS     ROLES                  AGE   VERSION
ip-172-31-34-51.ap-northeast-1.compute.internal    Ready      control-plane,master   21h   v1.21.0
ip-172-31-41-163.ap-northeast-1.compute.internal   NotReady   <none>                 13s   v1.21.0


kubectl taint nodes ip-172-31-34-51.ap-northeast-1.compute.internal node-role.kubernetes.io/master:NoSchedule

